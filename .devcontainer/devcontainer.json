{
	"name": "DEaDASS Codespace (with db containers)",
	"dockerComposeFile": "docker-compose.yaml",
	"service": "app",
  "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind" ],

	"settings": {
		"sqltools.connections": [{
        "name": "Postgres",
        "driver": "PostgreSQL",
        "previewLimit": 50,
        "server": "localhost",
        "port": 5432,
        "database": "postgres",
        "username": "postgres",
        "password": "mysecretpassword"
      },
      {
        "name": "MySQL",
        "driver": "MySQL",
        "server": "localhost",
        "port": 3306,
        "database": "mysql",
        "username": "mysql",
        "password": "mysecretpassword"
      }
    ],
		"terminal.integrated.shell.linux": "/bin/bash",
		"go.useGoProxyToCheckForToolUpdates": false,
		"go.useLanguageServer": true,
		"go.gopath": "/go",
		"go.goroot": "/usr/local/go",
		"go.toolsGopath": "/go/bin",
		"python.pythonPath": "/opt/python/latest/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
		"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
		"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
		"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
		"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
		"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
		"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
		"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
		"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
		"lldb.executable": "/usr/bin/lldb",
		"files.watcherExclude": {
			"**/target/**": true
		},
		"jest.pathToConfig": "backend/jest.config.js"
	},
	"remoteUser": "codespace",
	"overrideCommand": false,
	"workspaceMount": "source=${localWorkspaceFolder},target=/home/codespace/workspace,type=bind,consistency=cached",
	"workspaceFolder": "/home/codespace/workspace",
	"runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined", "--privileged", "--init" ],

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"GitHub.vscode-pull-request-github",
    "ms-vscode.vscode-typescript-next",
    "gamunu.vscode-yarn",
    "ms-azuretools.vscode-docker",
		"mtxr.sqltools",
		"mtxr.sqltools-driver-pg",
    "mtxr.sqltools-driver-mysql",
    "mongodb.mongodb-vscode",
    "orta.vscode-jest"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// "oryx build" will automatically install your dependencies and attempt to build your project
	"postCreateCommand": "yarn; ln -s  ~/words.txt ~/workspace/DEaDASS/words.txt; ln -s ~/words.txt ~/workspace/DEaDASS/backend/words.txt"
}
